package Vista;

import java.util.Scanner;

/**
 * Sistema Terminal Simple - Sin dependencias JPA para testing
 */
public class SistemaTerminalSimple {
    private Scanner scanner;
    
    public SistemaTerminalSimple() {
        this.scanner = new Scanner(System.in);
    }
    
    public static void main(String[] args) {
        System.out.println("=== SISTEMA DE ALQUILER DE VEHICULOS ===");
        System.out.println("VERSION SIMPLE - TESTING");
        
        SistemaTerminalSimple sistema = new SistemaTerminalSimple();
        sistema.mostrarMenuPrincipal();
    }
    
    private void mostrarMenuPrincipal() {
        while (true) {
            System.out.println("\n--- MENU PRINCIPAL ---");
            System.out.println("1. Iniciar Sesi√≥n");
            System.out.println("2. Informaci√≥n del Sistema");
            System.out.println("3. Salir");
            System.out.print("Seleccione una opci√≥n: ");
            
            try {
                int opcion = Integer.parseInt(scanner.nextLine());
                
                switch (opcion) {
                    case 1:
                        iniciarSesion();
                        break;
                    case 2:
                        mostrarInformacionSistema();
                        break;
                    case 3:
                        System.out.println("¬°Hasta luego!");
                        return;
                    default:
                        System.out.println("Opci√≥n inv√°lida");
                }
            } catch (NumberFormatException e) {
                System.out.println("Por favor ingrese un n√∫mero v√°lido");
            }
        }
    }
    
    private void iniciarSesion() {
        System.out.println("\n--- INICIAR SESION ---");
        System.out.print("Usuario: ");
        String usuario = scanner.nextLine();
        System.out.print("Contrase√±a: ");
        String password = scanner.nextLine();
        
        // Simulaci√≥n de autenticaci√≥n
        if ("admin".equals(usuario) && "admin123".equals(password)) {
            System.out.println("¬°Bienvenido Administrador!");
            mostrarMenuAdmin();
        } else if ("empleado".equals(usuario) && "emp123".equals(password)) {
            System.out.println("¬°Bienvenido Empleado!");
            mostrarMenuEmpleado();
        } else {
            System.out.println("Credenciales incorrectas");
        }
    }
    
    private void mostrarMenuAdmin() {
        while (true) {
            System.out.println("\n--- MENU ADMINISTRADOR ---");
            System.out.println("1. Gestionar Veh√≠culos");
            System.out.println("2. Gestionar Usuarios");
            System.out.println("3. Gestionar Precios");
            System.out.println("4. Cerrar Sesi√≥n");
            System.out.print("Seleccione una opci√≥n: ");
            
            try {
                int opcion = Integer.parseInt(scanner.nextLine());
                
                switch (opcion) {
                    case 1:
                        gestionarVehiculos();
                        break;
                    case 2:
                        gestionarUsuarios();
                        break;
                    case 3:
                        gestionarPrecios();
                        break;
                    case 4:
                        return;
                    default:
                        System.out.println("Opci√≥n inv√°lida");
                }
            } catch (NumberFormatException e) {
                System.out.println("Por favor ingrese un n√∫mero v√°lido");
            }
        }
    }
    
    private void mostrarMenuEmpleado() {
        while (true) {
            System.out.println("\n--- MENU EMPLEADO ---");
            System.out.println("1. Listar Veh√≠culos");
            System.out.println("2. Gestionar Reservaciones");
            System.out.println("3. Gestionar Rentas");
            System.out.println("4. Cerrar Sesi√≥n");
            System.out.print("Seleccione una opci√≥n: ");
            
            try {
                int opcion = Integer.parseInt(scanner.nextLine());
                
                switch (opcion) {
                    case 1:
                        listarVehiculos();
                        break;
                    case 2:
                        gestionarReservaciones();
                        break;
                    case 3:
                        gestionarRentas();
                        break;
                    case 4:
                        return;
                    default:
                        System.out.println("Opci√≥n inv√°lida");
                }
            } catch (NumberFormatException e) {
                System.out.println("Por favor ingrese un n√∫mero v√°lido");
            }
        }
    }
    
    private void gestionarVehiculos() {
        while (true) {
            System.out.println("\n--- GESTION DE VEHICULOS ---");
            System.out.println("1. Crear Veh√≠culo");
            System.out.println("2. Listar Veh√≠culos");
            System.out.println("3. Editar Veh√≠culo");
            System.out.println("4. Eliminar Veh√≠culo");
            System.out.println("5. Volver");
            System.out.print("Seleccione una opci√≥n: ");
            
            try {
                int opcion = Integer.parseInt(scanner.nextLine());
                
                switch (opcion) {
                    case 1:
                        crearVehiculo();
                        break;
                    case 2:
                        listarVehiculos();
                        break;
                    case 3:
                        System.out.println("Funci√≥n de edici√≥n (pendiente implementaci√≥n con BD)");
                        break;
                    case 4:
                        System.out.println("Funci√≥n de eliminaci√≥n (pendiente implementaci√≥n con BD)");
                        break;
                    case 5:
                        return;
                    default:
                        System.out.println("Opci√≥n inv√°lida");
                }
            } catch (NumberFormatException e) {
                System.out.println("Por favor ingrese un n√∫mero v√°lido");
            }
        }
    }
    
    private void crearVehiculo() {
        System.out.println("\n--- CREAR VEHICULO ---");
        System.out.print("Marca: ");
        String marca = scanner.nextLine();
        System.out.print("Modelo: ");
        String modelo = scanner.nextLine();
        System.out.print("A√±o: ");
        String anio = scanner.nextLine();
        System.out.print("Precio: ");
        String precio = scanner.nextLine();
        
        System.out.println("\nTipos de veh√≠culo disponibles:");
        System.out.println("1. Auto de Combusti√≥n");
        System.out.println("2. Auto El√©ctrico");
        System.out.println("3. Cami√≥n");
        System.out.println("4. Yate");
        System.out.print("Seleccione el tipo: ");
        
        try {
            int tipo = Integer.parseInt(scanner.nextLine());
            
            switch (tipo) {
                case 1:
                    crearAutoCombustionDemo(marca, modelo, anio, precio);
                    break;
                case 2:
                    crearAutoElectricoDemo(marca, modelo, anio, precio);
                    break;
                case 3:
                    crearCamionDemo(marca, modelo, anio, precio);
                    break;
                case 4:
                    crearYateDemo(marca, modelo, anio, precio);
                    break;
                default:
                    System.out.println("Tipo inv√°lido");
            }
        } catch (NumberFormatException e) {
            System.out.println("Por favor ingrese un n√∫mero v√°lido");
        }
    }
    
    private void crearAutoCombustionDemo(String marca, String modelo, String anio, String precio) {
        System.out.println("\n--- CREANDO AUTO DE COMBUSTION ---");
        System.out.print("N√∫mero de puertas: ");
        String puertas = scanner.nextLine();
        System.out.print("Tipo de combustible: ");
        String combustible = scanner.nextLine();
        
        System.out.println("\n‚úÖ VEHICULO CREADO EXITOSAMENTE");
        System.out.println("Tipo: Auto de Combusti√≥n");
        System.out.println("Marca: " + marca);
        System.out.println("Modelo: " + modelo);
        System.out.println("A√±o: " + anio);
        System.out.println("Precio: $" + precio);
        System.out.println("Puertas: " + puertas);
        System.out.println("Combustible: " + combustible);
        System.out.println("\nüîÑ En producci√≥n, esto se guardar√≠a en:");
        System.out.println("- Tabla 'vehiculo' (datos base)");
        System.out.println("- Tabla 'terrestre' (herencia nivel 1)");
        System.out.println("- Tabla 'autocombustion' (herencia nivel 2)");
    }
    
    private void crearAutoElectricoDemo(String marca, String modelo, String anio, String precio) {
        System.out.println("\n--- CREANDO AUTO ELECTRICO ---");
        System.out.print("N√∫mero de puertas: ");
        String puertas = scanner.nextLine();
        System.out.print("Capacidad de bater√≠a (kWh): ");
        String bateria = scanner.nextLine();
        System.out.print("Autonom√≠a (km): ");
        String autonomia = scanner.nextLine();
        
        System.out.println("\n‚úÖ VEHICULO CREADO EXITOSAMENTE");
        System.out.println("Tipo: Auto El√©ctrico");
        System.out.println("Marca: " + marca);
        System.out.println("Modelo: " + modelo);
        System.out.println("A√±o: " + anio);
        System.out.println("Precio: $" + precio);
        System.out.println("Puertas: " + puertas);
        System.out.println("Bater√≠a: " + bateria + " kWh");
        System.out.println("Autonom√≠a: " + autonomia + " km");
        System.out.println("\nüîÑ En producci√≥n, esto se guardar√≠a en:");
        System.out.println("- Tabla 'vehiculo' (datos base)");
        System.out.println("- Tabla 'terrestre' (herencia nivel 1)");
        System.out.println("- Tabla 'autocombustion' (herencia intermedia)");
        System.out.println("- Tabla 'autoelectrico' (herencia nivel 2)");
    }
    
    private void crearCamionDemo(String marca, String modelo, String anio, String precio) {
        System.out.println("\n--- CREANDO CAMION ---");
        System.out.print("N√∫mero de puertas: ");
        String puertas = scanner.nextLine();
        System.out.print("Capacidad de carga (toneladas): ");
        String carga = scanner.nextLine();
        
        System.out.println("\n‚úÖ VEHICULO CREADO EXITOSAMENTE");
        System.out.println("Tipo: Cami√≥n");
        System.out.println("Marca: " + marca);
        System.out.println("Modelo: " + modelo);
        System.out.println("A√±o: " + anio);
        System.out.println("Precio: $" + precio);
        System.out.println("Puertas: " + puertas);
        System.out.println("Capacidad: " + carga + " toneladas");
        System.out.println("\nüîÑ En producci√≥n, esto se guardar√≠a en:");
        System.out.println("- Tabla 'vehiculo' (datos base)");
        System.out.println("- Tabla 'terrestre' (herencia nivel 1)");
        System.out.println("- Tabla 'camion' (herencia nivel 2)");
    }
    
    private void crearYateDemo(String marca, String modelo, String anio, String precio) {
        System.out.println("\n--- CREANDO YATE ---");
        System.out.print("Eslora (metros): ");
        String eslora = scanner.nextLine();
        System.out.print("Calado (metros): ");
        String calado = scanner.nextLine();
        System.out.print("¬øTiene motor el√©ctrico? (true/false): ");
        String motorElectrico = scanner.nextLine();
        
        System.out.println("\n‚úÖ VEHICULO CREADO EXITOSAMENTE");
        System.out.println("Tipo: Yate");
        System.out.println("Marca: " + marca);
        System.out.println("Modelo: " + modelo);
        System.out.println("A√±o: " + anio);
        System.out.println("Precio: $" + precio);
        System.out.println("Eslora: " + eslora + " metros");
        System.out.println("Calado: " + calado + " metros");
        System.out.println("Motor El√©ctrico: " + motorElectrico);
        System.out.println("\nüîÑ En producci√≥n, esto se guardar√≠a en:");
        System.out.println("- Tabla 'vehiculo' (datos base)");
        System.out.println("- Tabla 'acuatico' (herencia nivel 1)");
        System.out.println("- Tabla 'yate' (herencia nivel 2)");
    }
    
    private void listarVehiculos() {
        System.out.println("\n--- LISTA DE VEHICULOS ---");
        System.out.println("üîÑ En producci√≥n, aqu√≠ aparecer√≠an todos los veh√≠culos de la BD");
        System.out.println("\nEjemplo de veh√≠culos que se mostrar√≠an:");
        System.out.println("1. Toyota Prius 2023 - Auto El√©ctrico - $35,000");
        System.out.println("2. Ford F-150 2022 - Cami√≥n - $45,000");
        System.out.println("3. BMW 320i 2023 - Auto Combusti√≥n - $40,000");
        System.out.println("4. Yacht Prestige 2021 - Yate - $250,000");
    }
    
    private void gestionarUsuarios() {
        System.out.println("\n--- GESTION DE USUARIOS ---");
        System.out.println("üîÑ Funcionalidad de gesti√≥n de usuarios");
        System.out.println("- Crear usuarios ADMIN/EMPLEADO");
        System.out.println("- Activar/Desactivar usuarios");
        System.out.println("- Gestionar permisos");
    }
    
    private void gestionarPrecios() {
        System.out.println("\n--- GESTION DE PRECIOS ---");
        System.out.println("üîÑ Sistema PrecioVehiculo implementado");
        System.out.println("- Configurar precios por tipo de veh√≠culo");
        System.out.println("- Aplicar descuentos por temporada");
        System.out.println("- Gestionar tarifas especiales");
    }
    
    private void gestionarReservaciones() {
        System.out.println("\n--- GESTION DE RESERVACIONES ---");
        System.out.println("üîÑ Funcionalidad para empleados");
        System.out.println("- Crear nuevas reservaciones");
        System.out.println("- Consultar reservaciones existentes");
        System.out.println("- Modificar fechas de reservaci√≥n");
    }
    
    private void gestionarRentas() {
        System.out.println("\n--- GESTION DE RENTAS ---");
        System.out.println("üîÑ Funcionalidad para empleados");
        System.out.println("- Procesar alquileres");
        System.out.println("- Generar facturas");
        System.out.println("- Registrar devoluciones");
    }
    
    private void mostrarInformacionSistema() {
        System.out.println("\n=== INFORMACION DEL SISTEMA ===");
        System.out.println("üìã Sistema de Alquiler de Veh√≠culos");
        System.out.println("üîß Versi√≥n: 1.0 (Demo)");
        System.out.println("üë• Roles: ADMIN, EMPLEADO");
        System.out.println("üöó Veh√≠culos: Auto Combusti√≥n, Auto El√©ctrico, Cami√≥n, Yate");
        System.out.println("üíæ Base de Datos: MySQL (JPA/EclipseLink)");
        System.out.println("\n‚úÖ PROBLEMAS RESUELTOS:");
        System.out.println("- ‚úÖ Sistema de roles funcionando");
        System.out.println("- ‚úÖ Herencia de veh√≠culos corregida");
        System.out.println("- ‚úÖ Creaci√≥n de registros en todas las tablas");
        System.out.println("- ‚úÖ Validaci√≥n de tipos de datos");
        System.out.println("\nüîê CREDENCIALES DE DEMO:");
        System.out.println("Admin: usuario='admin', password='admin123'");
        System.out.println("Empleado: usuario='empleado', password='emp123'");
    }
}